#! /usr/bin/env bash
# examples:
# $ ./onall.sh -d bink -e '(layerpro|gremlin|git)' git pull -r

usage="[-i] [-e regex] [-d directory] [-u user] command args...

-i :: ignore errors
-e :: except machines by regex argument
-d :: cd to 'directory' first
-u :: execute as 'user'
"

set -eu
set -o pipefail

self="${BASH_SOURCE[0]}"
SCRIPTDIR=$(cd "$(dirname "$self")" && pwd)
argv0="$(basename "$self")"

function usage {
    [ "${*-}" ] && echo "$argv0: Error: $*" 1>&2
    echo "Usage: $argv0: $usage" 1>&2
    exit 1
}

function errordie {
    [ "${*-}" ] && echo "$argv0: Error: $*" 1>&2
    exit 1
}

[ "${ONALL_HOSTS-}" ] || errordie ONALL_HOSTS: env var undefined

cd=
ignoreerrors=
except=
user=${USER}

while [ $# -gt 0 ]; do
    case $1 in
        -d|--cd)
	    [ $# -lt 2 ] && usage missing companion arg to --cd
            shift
            cd="cd $1;"
            ;;
	-e) except="$2"; shift ;;
	-i) ignoreerrors=$1 ;;
	--user)
	    [ $# -lt 2 ] && usage missing companion arg to --user
	    shift
	    user="$1"
	    ;;
        -*) usage ;;
        *)  break ;;
    esac
    shift
done

hosts=${ONALL_HOSTS}

if [ "$except" ]; then
    tmp=
    for h in $hosts; do
	if [[ $h =~ $except ]]; then
	    echo Note: skip host $h
	else
	    tmp="$tmp $h"
	fi
    done
    hosts=$tmp
fi

# from http://stackoverflow.com/questions/6592376/prevent-ssh-from-breaking-up-shell-script-parameters
QUOTE_ARGS=''
for ARG in "$@"; do
    ARG=$(printf "%q" "$ARG")
    QUOTE_ARGS="${QUOTE_ARGS} $ARG"
done

{
    for h in $hosts; do
	echo ""
	echo ============= $h ========================================
	echo ""
	if [ "${SSH_IDENT-}" ]; then
	    ssh="ssh -A -i .ssh/${SSH_IDENT}"
	else
	    ssh="ssh -A"
	fi
	if [ "$ignoreerrors" ]; then
	    $ssh ${user}@$h "$cd${QUOTE_ARGS}" || true
	else
	    $ssh ${user}@$h "$cd${QUOTE_ARGS}"
	fi
    done
}
