#! /usr/bin/env zsh
# Use zsh because the native BASH on macOS is too old to
# run this script.

set -eu
set -o pipefail

prog="$(basename "$0")"

function usage {
    [ "${*-}" ] && echo "$prog: $*" 1>&2
    cat 1>&2 <<EOF
Usage: $prog [--clean]
Usage: $prog --list

Install Homebrew packages.  To list packages 
use --list.

Options:
--clean   :: clean up after installation
EOF
    exit 1
}

function errordie {
    [ "${*-}" ] && echo "$prog: $*" 1>&2
    exit 1
}

type -p brew > /dev/null || errordie Homebrew is not installed

function d {
    echo "+ $*"
    "$@"
}

packages_with_options=()

hostname=$(hostname)

# For Apple Silicon Macs, make sure to install the Intel version, for now.
brew="brew"
# disable running as an admin user, since it doesn't seem to work
# anymore on M1 Monterey.
#     if id -Gn $USER | grep -q -w admin; then
if [ -f "$HOME/.ssh/id_rsa_nopw" ]; then
    manager=(ssh -i $HOME/.ssh/id_rsa_nopw admin@$(hostname -s) ${brew})
else # assume SSH works to admin@...
    manager=(ssh admin@$(hostname -s) ${brew})
fi


packages=(autossh bash coreutils curl diffutils findutils
          git grep jq moreutils findutils openssh wget
          fwknop gnu-sed gnu-tar perl xmlstarlet shellcheck
          python rsync lsof p7zip 
          ncdu telnet rclone duti gnu-getopt
          sqlite sqldiff

          # the screen with macOS sucks
          screen
          # procmail is for lockfile
          procmail
          # https://alt-tab-macos.netlify.app/
          alt-tab
          # mailx-like package
          s-nail
         )

if [[ $hostname =~ (max) ]]; then
    # "imagemagick" and "exiftool" are photography tools used
    #   by various scripts
    # "basictex" is for the program "pdflatex" used by...
    # "pandoc" to convert markdown to PDF files
    packages+=(imagemagick exiftool basictex pandoc
               # https://tclementdev.com/timemachineeditor/
               timemachineeditor
              )
fi

##### too big and I don't really use it much
#if [[ $hostname =~ (max|mini18) ]]; then
#    # ffmpeg with improved AAC codec
#    packages_with_options+=("homebrew-ffmpeg/ffmpeg/ffmpeg --with-fdk-aac")
#fi

###############################################################################

clean=
list=

while [ $# -gt 0 ]; do
    case $1 in
        --help)  usage ;;
        --clean) clean=$1 ;;
        --list)  list=$1 ;;
        *)       break ;;
    esac
    shift
done

if [ "$list" ]; then
    for p in "${packages[@]}"; do echo $p; done
    for p in "${packages_with_options[@]}"; do echo $p; done
    exit 0
fi

d "${manager[@]}" analytics off
d "${manager[@]}" update
d "${manager[@]}" upgrade
d "${manager[@]}" install "${packages[@]}"
for package_with_options in "${packages_with_options[@]}"; do
    d "${manager[@]}" install $package_with_options
done
[ "$clean" ] && d "${manager[@]}" cleanup
exit 0
