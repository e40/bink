#! /usr/bin/env bash

set -eu
set -o pipefail

prog="$(basename "$0")"

function usage {
    [ "${*-}" ] && echo "$prog: $*" 1>&2
    cat 1>&2 <<EOF
Usage: $prog [--clean]
Usage: $prog --list

Install Homebrew packages.  To list packages 
use --list.

Options:
--clean   :: clean up after installation
EOF
    exit 1
}

function errordie {
    [ "${*-}" ] && echo "$prog: $*" 1>&2
    exit 1
}

type -p brew > /dev/null || errordie Homebrew is not installed

function d {
    echo "+ $*"
    "$@"
}

packages_with_options=()

hostname=$(hostname)

brew="$(brew --prefix)/bin/brew"
if id -Gn $USER | grep -q -w admin; then
    manager="${brew}"
else
    manager="ssh -i $HOME/.ssh/id_rsa_nopw admin@$(hostname -s) ${brew}"
fi

packages="autossh bash coreutils curl diffutils findutils \
          git grep jq moreutils openssh wget"

packages="$packages fwknop gnu-sed gnu-tar perl xmlstarlet shellcheck"
# procmail is for lockfile
packages="$packages python rsync lsof p7zip procmail ncdu telnet"
# smartmontools is large so don't add it to the default list
packages="$packages rclone duti gnu-getopt"

if [[ $hostname =~ (mack2) ]]; then
    # photography tools
    packages="$packages exiftool"
fi

if [[ $hostname =~ (mack2|mini18) ]]; then
    # ffmpeg with improved AAC codec
    packages_with_options+=("homebrew-ffmpeg/ffmpeg/ffmpeg --with-fdk-aac")
fi

###############################################################################

clean=
list=

while [ $# -gt 0 ]; do
    case $1 in
        --help)  usage ;;
        --clean) clean=$1 ;;
        --list)  list=$1 ;;
        *)       break ;;
    esac
    shift
done

if [ "$list" ]; then
    for p in $packages; do echo $p; done
    for p in "${packages_with_options[@]}"; do echo $p; done
    exit 0
fi

d $manager analytics off
d $manager update
d $manager upgrade
d $manager install $packages
for package_with_options in "${packages_with_options[@]}"; do
    d $manager install $package_with_options
done
[ "$clean" ] && d $manager cleanup
exit 0
