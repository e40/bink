#! /usr/bin/env bash
# shellcheck disable=SC2317

set -ueE -o pipefail

if [ "$(uname -s)" = Darwin ]; then
    tar=gtar
else
    tar
fi

prog="$(basename "$0")"

function usage {
    [ "${*-}" ] && echo "$prog: $*" 1>&2
    cat 1>&2 <<EOF
Usage: $prog { --gzip | --lzip | --xz } src-directory dest-file

Compress the contents of SRC-DIRECTOR to DEST-FILE.

Relative size/speed for a 3.1G source directory of 1,603
files (text and binary):

arg      time    output size
--gzip   1m3s    3.0G
--xz     2m6s    3.0G
--lzip   18m3s   3.1G              DO NOT USE!!!!!!!
EOF
    exit 1
}

function errordie {
    [ "${*-}" ] && echo "$prog: $*" 1>&2
    exit 1
}

type -p "$tar" > /dev/null || errordie "Cannot find $tar"

debug=

function d {
    if [ "$debug" ]; then
	echo "would: $*" 1>&2
    else
	echo "+ $*" 1>&2
        "$@"
    fi
}

gzip=
lzip=
xz=

while [ $# -gt 0 ]; do
    case $1 in
        --debug) debug=$1 ;;
        --gzip)  gzip=$1 ;;
        --lzip)  lzip=$1 ;;
        --xz)    xz=$1 ;;
        --)      ;;
        *)       break ;;
    esac
    shift
done

[ $# -eq 2 ] || usage missing arguments

[ "$gzip" ] || [ "$lzip" ] || [ "$xz" ] ||
  usage "--gzip or --lzip or --xz must be supplied"

[ -d "$1" ] || errordie "source directory $1 does not exist"
src=$1

[ -f "$2" ] && errordie "output file $2 exists"
dst=$2

tempfile="$(dirname "$dst")/${prog}temp$$"
rm -f "$tempfile"
function exit_cleanup {
    /bin/rm -f "$tempfile"
}
function err_report {
    echo "Error on line $(caller)" 1>&2
}
trap err_report   ERR
trap exit_cleanup EXIT

{
    if [ "$gzip" ]; then
        d tar --gzip -cf "$tempfile" "$src"
    elif [ "$lzip" ]; then
        d tar --lzip -cf "$tempfile" "$src"
    elif [ "$xz" ]; then
        d tar --xz -cf "$tempfile" "$src"
    else
        errordie should not get here
    fi
    d mv "$tempfile" "$dst"
    exit 0
}
